package math

import (
	"testing"

	"github.com/ericlagergren/decimal"
)

func TestBig_Exp(t *testing.T) {
	tests := []struct {
		dec  string
		exp  string
		prec int32
	}{
		0:  {"-8.748656950366438", "0.000158675", 6},
		1:  {"40.40850241721978", "354151937244564830", 18},
		2:  {"73.30000879940332", "6.82007804e+31", 9},
		3:  {"35.89159984662575", "3868332175374127.669673", 22},
		4:  {"-4.1512363035379", "0.0157449389235511838", 18},
		5:  {"-68.12323977553022", "2.59688595e-30", 9},
		6:  {"-60.614962073263406", "4.734307e-27", 7},
		7:  {"-4.865041952853346", "0.0077115046651", 11},
		8:  {"19.704966352217582", "361208659.046814473743298", 24},
		9:  {"-21.85578630459976", "3.222201e-10", 7},
		10: {"82.87588357365792", "9.8296695672260140384636e+35", 23},
		11: {"-25.506698605453636", "8.36722685890e-12", 12},
		12: {"-76.89354159563261", "4.0323590e-34", 8},
		13: {"-70.2633346084568", "3.055072349e-31", 10},
		14: {"-21.75372021081381", "3.56844782783e-10", 12},
		15: {"2.6624827767715686", "14.331827692113042", 17},
		16: {"-96.83919622158838", "8.7754914822403566323918e-43", 23},
		17: {"97.54660128490326", "2.311802e+42", 7},
		18: {"19.67234900470102", "349617061.9295282556", 19},
		19: {"-19.988601487526466", "2.0847821167279748110589e-9", 23},
		20: {"-61.56525338816619", "1.830417572784093673193404e-27", 25},
		21: {"-29.48332735888171", "1.5687495703867765401e-13", 20},
		22: {"-84.74682272069396", "1.5664716288673e-37", 14},
		23: {"-5.141987940031129", "0.00584606", 6},
		24: {"-59.64186269471252", "1.2527607590076679e-26", 17},
		25: {"57.01140301919159", "5.750925436484517e+24", 16},
		26: {"-53.47126566461959", "5.994105485396352375e-24", 19},
		27: {"94.39473267778467", "9.888070e+40", 7},
		28: {"-1.5172773737968157", "0.21930817", 8},
		29: {"-59.57754736169733", "1.3360e-26", 5},
		30: {"-57.08958595213939", "1.60808072677e-25", 12},
		31: {"73.65129808384759", "9.6906e+31", 5},
		32: {"-51.00479595622606", "7.061526050698371484e-23", 19},
		33: {"-78.34101448930855", "9.48264955e-35", 9},
		34: {"-94.76401480997879", "6.99054901284194e-42", 15},
		35: {"-64.30445473402426", "1.182851288281360976177090e-28", 25},
		36: {"-84.83774023774372", "1.4303343141056497e-37", 17},
		37: {"-65.41153068461759", "3.90960760510178e-29", 15},
		38: {"52.32265526524813", "5.289814713107165786531e+22", 22},
		39: {"0.2856256494736158", "1.330594253347893", 16},
		40: {"-53.73245080200248", "4.61629035852671e-24", 15},
		41: {"95.05660578698794", "1.91672303300e+41", 12},
		42: {"27.37684913226701", "775558407201.332", 15},
		43: {"-72.62941915220554", "2.867107906457210561e-32", 19},
		44: {"-31.77381246319696", "1.58784672711822e-14", 15},
		45: {"48.19485014316953", "852623843246004296497.0344", 25},
		46: {"-26.63866583913405", "2.6975805448955996221e-12", 20},
		47: {"0.8074038069587886", "2.2421", 5},
		48: {"-35.836180275711826", "2.7324024e-16", 8},
		49: {"-48.751960790015346", "6.71881134599976028512284e-22", 24},
	}
	for i, v := range tests {
		x := new(decimal.Big).SetPrecision(v.prec)
		a := newbig(v.dec)
		Exp(x, a)
		xs := x.String()
		if xs != v.exp {
			t.Fatalf("#%d: exp(%s): wanted %s, got %s", i, v.dec, v.exp, xs)
		}
	}
}
